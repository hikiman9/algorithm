def gdc(a, b):
    while b > 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return (a * b) // gdc(a, b)

a, b = map(int, input().split())

print(gdc(a, b))
print(lcm(a, b))

# 최소공배수나 최대공약수 문제 나오기만 하면 개같이 인수 나열해서 풀어왔는데
# 유클리드 호제법을 사용해보았다 이렇게 편한 게 있는 줄도 모르고 그 고생을ㅋㅋ~
# a를 b로 나눈 나머지 c가 있을 떄 a와 b의 최대공약수 = b와 c의 최대공약수라는 개념을 이용해서
# 나머지가 0이 될 때까지 반복문을 돌려버리면 된다고 함. 코드도 굉장히 간단한 것을,,,

# 최소공배수야 두 수의 곱을 최대공약수로 나누면 되니 별 거 없는듯